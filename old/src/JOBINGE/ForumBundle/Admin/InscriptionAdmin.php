<?php
/**
 * Copyright (C) 2017 Andrew SASSOYE
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

namespace JOBINGE\ForumBundle\Admin;


use Sonata\AdminBundle\Admin\AbstractAdmin;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Form\FormMapper;
use Sonata\AdminBundle\Form\Type\ModelListType;
use Sonata\AdminBundle\Route\RouteCollection;
use Sonata\AdminBundle\Show\ShowMapper;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;

class InscriptionAdmin extends AbstractAdmin
{
    public function configureBatchActions($actions)
    {

        return $actions;
    }

    public function configureActionButtons($action, $object = null)
    {
        return parent::configureActionButtons($action, $object); // TODO: Change the autogenerated stub
    }

    public function prePersist($object)
    {
        foreach ($object->getElements() as $element) {
            $element->setInscription($object);
        }
    }

    public function preUpdate($object)
    {
        foreach ($object->getElements() as $element) {
            $element->setInscription($object);
        }
    }

    protected function configureRoutes(RouteCollection $collection)
    {
        $collection->add('contract', $this->getRouterIdParameter() . '/contract');
        $collection->add('brochure', $this->getRouterIdParameter() . '/brochure');
    }

    protected function configureShowFields(ShowMapper $showMapper)
    {
        // define group zoning
        $showMapper
            ->with('General')
            ->add('forum')
            ->add('company')
            ->add('statusString')
            ->add('statusInterne');
    }

    protected function configureFormFields(FormMapper $formMapper)
    {
        $formMapper
            ->tab('General')
            ->with('Status', array('class' => 'col-md-6', 'box_class' => 'box box-solid box-danger', 'description' => 'Cette partie est visible par l\'entreprise. Elle permet de donner l\'avancement du dossier ainsi que quelques explications concernant le statut',))
            ->add('status', ChoiceType::class, array(
                'choices' => array(
                    'En cours de validation' => 1,
                    'En attente de signature du contrat' => 2,
                    'En attente de payement de la facture' => 3,
                    'Validé' => 4,
                    'Refusé' => 0
                ),
                'help' => 'Le statut du dossier'
            ))
            ->add('statusComment', TextareaType::class, array(
                'help' => 'Message affiché sur la plateforme pour expliquer le status (refus par exemple)'
            ))
            ->end()
            ->with('Status interne', array('class' => 'col-md-6', 'description' => 'Ceci n\'est pas visible par l\'entreprise'))
            ->add('statusInterne', ChoiceType::class, array(
                'choices' => array(
                    'Nouvelle inscritpion' => array(
                        'Nouveau' => 0,
                        'Vu, a accepter' => 1,
                        'Vu, refus probable' => 2,
                        'Vu, a contacter pour plus d\'informations' => 3),
                    'Accepté' => array(
                        'Contrat envoyé, en attente de signature' => 5,
                        'Contrat signé reçu' => 6,
                        'Facture envoyée, en attente de payement' => 7,
                        'Facture payée' => 8),
                    'Refusé' => array(
                        'Refusé' => 9,
                        'Refusé et prévenu' => 10
                    )

                ),
                'help' => 'Le statut interne'
            ))
            ->add('commentInterne', TextareaType::class, array(
                'help' => 'Commentaire en interne, non-visible par l\'entreprise'
            ))
            ->end()
            ->end()
            ->tab('Fiche')
            ->with('Inscription ', array('class' => 'col-md-12',
                'box_class' => 'box box-solid box-danger',
                'description' => null))
            ->add('forum', ModelListType::class, array(
                'btn_delete' => null,
            ))
            ->add('company', ModelListType::class, array(
                'btn_delete' => null
            ))
            ->add('commentaire', TextareaType::class, array(
                'disabled' => true,
                'help' => 'Commentaire donné lors de l\'inscription'
            ))
            ->end()
            ->add('dates', 'sonata_type_model', array(
                'multiple' => true,
                'expanded' => true,
                'btn_add' => false
            ))
            ->add('elements', 'sonata_type_collection', array(
                'required' => true,
                'by_reference' => true
            ), array(
                'edit' => 'inline',
                'inline' => 'table'
            ))
            ->end()->end()
            ->tab('Contrat')
            ->add('contrat', 'sonata_type_model_list', array('required' => false), array(
                'link_parameters' => array(
                    'context' => 'jobinge_contrats',
                    'hide_context' => true,
                ),
            ))
            ->add('contratSigne', 'sonata_type_model_list', array('required' => false), array(
                'link_parameters' => array(
                    'context' => 'jobinge_contrats',
                    'hide_context' => true,
                ),
            ))
            ->end();

    }

    protected function configureDatagridFilters(DatagridMapper $datagridMapper)
    {
        $datagridMapper
            ->add('id')
            ->add('forum')
            ->add('company')
            ->add('status')
            ->add('statusInterne');
    }

    protected function configureListFields(ListMapper $listMapper)
    {
        $listMapper
            ->addIdentifier('id')
            ->add('forum')
            ->add('company')
            ->add('statusString', null, array())
            ->add('statusInterneString')
            ->add('_actions', 'actions', array('actions' => array(
                'contract' => array(
                    'template' => 'JOBINGEForumBundle:Inscription:list__action__contract.html.twig'
                )

            )));
    }

}